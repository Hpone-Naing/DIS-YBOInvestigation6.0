// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YBOInvestigation.Data;

#nullable disable

namespace YBOInvestigation.Migrations
{
    [DbContext(typeof(YBOInvestigationDBContext))]
    [Migration("20240521033850_CreateTable")]
    partial class CreateTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("YBOInvestigation.Models.CallCenterInvestigationDept", b =>
                {
                    b.Property<int>("CallCenterInvestigationDeptPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CallCenterInvestigationDeptPkid"), 1L, 1);

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompletionStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverPkid")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("RecordTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TotalRecord")
                        .HasColumnType("int");

                    b.Property<int>("YBSCompanyPkid")
                        .HasColumnType("int");

                    b.Property<int>("YBSTypePkid")
                        .HasColumnType("int");

                    b.Property<string>("YbsRecordSender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CallCenterInvestigationDeptPkid");

                    b.HasIndex("DriverPkid");

                    b.HasIndex("YBSCompanyPkid");

                    b.HasIndex("YBSTypePkid");

                    b.ToTable("TB_CallCenterInvestigationDept");
                });

            modelBuilder.Entity("YBOInvestigation.Models.Driver", b =>
                {
                    b.Property<int>("DriverPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverPkid"), 1L, 1);

                    b.Property<string>("DriverLicense")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IDNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VehicleDataPkid")
                        .HasColumnType("int");

                    b.HasKey("DriverPkid");

                    b.HasIndex("VehicleDataPkid");

                    b.ToTable("TB_Driver");
                });

            modelBuilder.Entity("YBOInvestigation.Models.FuelType", b =>
                {
                    b.Property<int>("FuelTypePkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuelTypePkid"), 1L, 1);

                    b.Property<string>("FuelTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("FuelTypePkid");

                    b.ToTable("TB_FuelType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManufacturerPkid"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManufacturerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ManufacturerPkid");

                    b.ToTable("TB_Manufacturer");
                });

            modelBuilder.Entity("YBOInvestigation.Models.PunishmentType", b =>
                {
                    b.Property<int>("PunishmentTypePkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PunishmentTypePkid"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Punishment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PunishmentTypePkid");

                    b.ToTable("TB_DriverPunishmentType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.SpecialEventInvestigationDept", b =>
                {
                    b.Property<int>("SpecialEventInvestigationDeptDeptPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SpecialEventInvestigationDeptDeptPkid"), 1L, 1);

                    b.Property<string>("ActionResponse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverPkid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IncidenceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IncidencePlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("IncidenceTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("RecordDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ReportTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Review")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("VehicleNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("YBSCompanyPkid")
                        .HasColumnType("int");

                    b.Property<int>("YBSTypePkid")
                        .HasColumnType("int");

                    b.Property<string>("YbsRecordSender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YbsRecordSenderPosition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SpecialEventInvestigationDeptDeptPkid");

                    b.HasIndex("DriverPkid");

                    b.HasIndex("YBSCompanyPkid");

                    b.HasIndex("YBSTypePkid");

                    b.ToTable("TB_SpecialEventInvestigationDept");
                });

            modelBuilder.Entity("YBOInvestigation.Models.TrafficControlCenterInvestigationDept", b =>
                {
                    b.Property<int>("TrafficControlCenterInvestigationDeptPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrafficControlCenterInvestigationDeptPkid"), 1L, 1);

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompletionStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverPkid")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PunishmentTypePkid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RecordTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RedLightCrossingPlace")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TotalRecord")
                        .HasColumnType("int");

                    b.Property<int>("YBSCompanyPkid")
                        .HasColumnType("int");

                    b.Property<int>("YBSTypePkid")
                        .HasColumnType("int");

                    b.Property<string>("YbsRecordSender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TrafficControlCenterInvestigationDeptPkid");

                    b.HasIndex("DriverPkid");

                    b.HasIndex("PunishmentTypePkid");

                    b.HasIndex("YBSCompanyPkid");

                    b.HasIndex("YBSTypePkid");

                    b.ToTable("TB_TrafficControlCenterInvestigationDept");
                });

            modelBuilder.Entity("YBOInvestigation.Models.TrainedYBSDriverInfo", b =>
                {
                    b.Property<int>("TrainedYBSDriverInfoPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TrainedYBSDriverInfoPkid"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DriverPkid")
                        .HasColumnType("int");

                    b.Property<string>("EducationLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FatherName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TrainedYBSDriverInfoPkid");

                    b.HasIndex("DriverPkid");

                    b.ToTable("TB_TrainedYBSDriverInfo");
                });

            modelBuilder.Entity("YBOInvestigation.Models.User", b =>
                {
                    b.Property<int>("UserPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPkid"), 1L, 1);

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserTypeID")
                        .HasColumnType("int");

                    b.HasKey("UserPkid");

                    b.HasIndex("UserTypeID");

                    b.ToTable("TB_Users");
                });

            modelBuilder.Entity("YBOInvestigation.Models.UserType", b =>
                {
                    b.Property<int>("UserTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTypeID"), 1L, 1);

                    b.Property<string>("UserTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserTypeID");

                    b.ToTable("TB_UserTypes");
                });

            modelBuilder.Entity("YBOInvestigation.Models.VehicleData", b =>
                {
                    b.Property<int>("VehicleDataPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleDataPkid"), 1L, 1);

                    b.Property<string>("AssignedRoute")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CctvInstalled")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CngQty")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuelTypePkid")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManufacturedYear")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OperatorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("POSInstalled")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RegistrantOperatorName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("SerialNo")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TelematicDeviceInstalled")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TotalBusStop")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VehicleManufacturer")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VehicleTypePkid")
                        .HasColumnType("int");

                    b.Property<int>("YBSCompanyPkid")
                        .HasColumnType("int");

                    b.Property<string>("YBSName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VehicleDataPkid");

                    b.HasIndex("FuelTypePkid");

                    b.HasIndex("VehicleManufacturer");

                    b.HasIndex("VehicleTypePkid");

                    b.HasIndex("YBSCompanyPkid");

                    b.ToTable("TB_VehicleData");
                });

            modelBuilder.Entity("YBOInvestigation.Models.YBOInvestigationDept", b =>
                {
                    b.Property<int>("YBOInvestigationDeptPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YBOInvestigationDeptPkid"), 1L, 1);

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompletionStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverPkid")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PunishmentTypePkid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RecordTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TotalRecord")
                        .HasColumnType("int");

                    b.Property<int>("YBSCompanyPkid")
                        .HasColumnType("int");

                    b.Property<int>("YBSTypePkid")
                        .HasColumnType("int");

                    b.Property<string>("YbsRecordSender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("YBOInvestigationDeptPkid");

                    b.HasIndex("DriverPkid");

                    b.HasIndex("PunishmentTypePkid");

                    b.HasIndex("YBSCompanyPkid");

                    b.HasIndex("YBSTypePkid");

                    b.ToTable("TB_YBOInvestigationDept");
                });

            modelBuilder.Entity("YBOInvestigation.Models.YboRecord", b =>
                {
                    b.Property<int>("YboRecordPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YboRecordPkid"), 1L, 1);

                    b.Property<string>("ChallanNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CompletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompletionStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DriverPkid")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecordDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("TotalRecord")
                        .HasColumnType("int");

                    b.Property<int>("YBSCompanyPkid")
                        .HasColumnType("int");

                    b.Property<int>("YBSTypePkid")
                        .HasColumnType("int");

                    b.Property<string>("YbsRecordSender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("YboRecordPkid");

                    b.HasIndex("DriverPkid");

                    b.HasIndex("YBSCompanyPkid");

                    b.HasIndex("YBSTypePkid");

                    b.ToTable("TB_InvestigationDept");
                });

            modelBuilder.Entity("YBOInvestigation.Models.YBSCompany", b =>
                {
                    b.Property<int>("YBSCompanyPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YBSCompanyPkid"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("YBSCompanyName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("YBSCompanyPkid");

                    b.ToTable("TB_YBSCompany");
                });

            modelBuilder.Entity("YBOInvestigation.Models.YBSDriverCourseDelivery", b =>
                {
                    b.Property<int>("YBSDriverCourseDeliveryPkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YBSDriverCourseDeliveryPkid"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("PunishmentTypePkid")
                        .HasColumnType("int");

                    b.Property<int?>("TotalRecord")
                        .HasColumnType("int");

                    b.Property<int>("TrainedYBSDriverInfoPkid")
                        .HasColumnType("int");

                    b.Property<int>("YBSCompanyPkid")
                        .HasColumnType("int");

                    b.Property<int>("YBSTypePkid")
                        .HasColumnType("int");

                    b.HasKey("YBSDriverCourseDeliveryPkid");

                    b.HasIndex("PunishmentTypePkid");

                    b.HasIndex("TrainedYBSDriverInfoPkid");

                    b.HasIndex("YBSCompanyPkid");

                    b.HasIndex("YBSTypePkid");

                    b.ToTable("TB_YBSDriverCourseDelivery");
                });

            modelBuilder.Entity("YBOInvestigation.Models.YBSType", b =>
                {
                    b.Property<int>("YBSTypePkid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("YBSTypePkid"), 1L, 1);

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("YBSCompanyPkid")
                        .HasColumnType("int");

                    b.Property<string>("YBSTypeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("YBSTypePkid");

                    b.HasIndex("YBSCompanyPkid");

                    b.ToTable("TB_YBSType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.CallCenterInvestigationDept", b =>
                {
                    b.HasOne("YBOInvestigation.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSCompany", "YBSCompany")
                        .WithMany()
                        .HasForeignKey("YBSCompanyPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSType", "YBSType")
                        .WithMany()
                        .HasForeignKey("YBSTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("YBSCompany");

                    b.Navigation("YBSType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.Driver", b =>
                {
                    b.HasOne("YBOInvestigation.Models.VehicleData", "VehicleData")
                        .WithMany()
                        .HasForeignKey("VehicleDataPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VehicleData");
                });

            modelBuilder.Entity("YBOInvestigation.Models.SpecialEventInvestigationDept", b =>
                {
                    b.HasOne("YBOInvestigation.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSCompany", "YBSCompany")
                        .WithMany()
                        .HasForeignKey("YBSCompanyPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSType", "YBSType")
                        .WithMany()
                        .HasForeignKey("YBSTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("YBSCompany");

                    b.Navigation("YBSType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.TrafficControlCenterInvestigationDept", b =>
                {
                    b.HasOne("YBOInvestigation.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.PunishmentType", "PunishmentType")
                        .WithMany()
                        .HasForeignKey("PunishmentTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSCompany", "YBSCompany")
                        .WithMany()
                        .HasForeignKey("YBSCompanyPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSType", "YBSType")
                        .WithMany()
                        .HasForeignKey("YBSTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("PunishmentType");

                    b.Navigation("YBSCompany");

                    b.Navigation("YBSType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.TrainedYBSDriverInfo", b =>
                {
                    b.HasOne("YBOInvestigation.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("YBOInvestigation.Models.User", b =>
                {
                    b.HasOne("YBOInvestigation.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.VehicleData", b =>
                {
                    b.HasOne("YBOInvestigation.Models.FuelType", "FuelType")
                        .WithMany()
                        .HasForeignKey("FuelTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("VehicleManufacturer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSType", "YBSType")
                        .WithMany()
                        .HasForeignKey("VehicleTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSCompany", "YBSCompany")
                        .WithMany()
                        .HasForeignKey("YBSCompanyPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FuelType");

                    b.Navigation("Manufacturer");

                    b.Navigation("YBSCompany");

                    b.Navigation("YBSType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.YBOInvestigationDept", b =>
                {
                    b.HasOne("YBOInvestigation.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.PunishmentType", "PunishmentType")
                        .WithMany()
                        .HasForeignKey("PunishmentTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSCompany", "YBSCompany")
                        .WithMany()
                        .HasForeignKey("YBSCompanyPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSType", "YBSType")
                        .WithMany()
                        .HasForeignKey("YBSTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("PunishmentType");

                    b.Navigation("YBSCompany");

                    b.Navigation("YBSType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.YboRecord", b =>
                {
                    b.HasOne("YBOInvestigation.Models.Driver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSCompany", "YBSCompany")
                        .WithMany()
                        .HasForeignKey("YBSCompanyPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSType", "YBSType")
                        .WithMany()
                        .HasForeignKey("YBSTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("YBSCompany");

                    b.Navigation("YBSType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.YBSDriverCourseDelivery", b =>
                {
                    b.HasOne("YBOInvestigation.Models.PunishmentType", "PunishmentType")
                        .WithMany()
                        .HasForeignKey("PunishmentTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.TrainedYBSDriverInfo", "TrainedYBSDriverInfo")
                        .WithMany()
                        .HasForeignKey("TrainedYBSDriverInfoPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSCompany", "YBSCompany")
                        .WithMany()
                        .HasForeignKey("YBSCompanyPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBOInvestigation.Models.YBSType", "YBSType")
                        .WithMany()
                        .HasForeignKey("YBSTypePkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PunishmentType");

                    b.Navigation("TrainedYBSDriverInfo");

                    b.Navigation("YBSCompany");

                    b.Navigation("YBSType");
                });

            modelBuilder.Entity("YBOInvestigation.Models.YBSType", b =>
                {
                    b.HasOne("YBOInvestigation.Models.YBSCompany", "YBSCompany")
                        .WithMany()
                        .HasForeignKey("YBSCompanyPkid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YBSCompany");
                });
#pragma warning restore 612, 618
        }
    }
}
